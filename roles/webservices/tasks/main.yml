---
# brickburg/linuxrouter/roles/webservices/tasks/main.yml

- name: Install munin
  apt:
    force_apt_get: yes
    name:
      - munin
      - munin-node
      - nginx-light

- name: Enable services
  systemd_service:
    name: "{{item}}"
    enabled: true
    masked: false
  loop:
    - munin
    - munin-node
    - nginx
  notify:
    - Restart munin-node
    - Restart munin
    - Restart nginx

- name: Bind munin-node to localhost
  lineinfile:
    path: /etc/munin/munin-node.conf
    regexp: '^host\s'
    line: host 127.0.0.1
  notify:
    - Restart munin-node
    - Restart munin

- name: Ensure interface monitoring
  file:
    src: "/usr/share/munin/plugins/{{item.1}}"
    dest: "/etc/munin/plugins/{{item.1}}{{item.0 | brickburg.linuxrouter.interfacename}}"
    owner: root
    group: root
    state: "{{'link' if item.0.state == 'present' else 'absent'}}"
  loop: "{{lr.lans | product([ 'if_', 'if_err_' ]) | list}}"
  notify:
    - Restart munin-node
    - Restart munin

- name: Munin configuration
  template:
    src: files/munin.conf.j2
    dest: /etc/munin/munin.conf
    owner: root
    group: root
    mode: u=rw,g=r
  notify:
    - Restart munin-node
    - Restart munin

- name: Ensure self-signed CA
  include_role:
    name: brickburg.linuxrouter.selfsignedcert

- name: Webserver configuration
  template:
    src: files/default.conf.j2
    dest: /etc/nginx/sites-available/default
    owner: root
    group: root
    mode: u=rw,g=r
  notify:
    - Restart nginx

- name: Symlink munin into nginx www-root
  file:
    src: /var/cache/munin/www
    dest: /var/www/html/munin
    owner: root
    group: root
    state: link
  notify:
    - Restart nginx

- name: Create index file
  template:
    src: files/index.html.j2
    dest: /var/www/html/index.html
    owner: root
    group: root
    mode: u=rw,go=r
